#define mod 1000000007
void multiply(vector<vector<long long int>> &A, vector<vector<long long int>> &B)
{
	long long int rw = A.size();
	long long int cl = A[0].size();
	long long int rw2 = B.size();
	long long int cl2 = B[0].size();
	vector<vector<long long int>> res(rw, vector<long long int>(cl2, 0));
	for (int i = 0; i < rw; i++)
	{
		for (int j = 0; j < cl2; j++)
		{
			for (int k = 0; k < cl; k++)
			{
				res[i][j] += A[i][k] * B[k][j];
				res[i][j]%=mod;
			}
		}
	}
	for (int i = 0; i < rw; i++)
	{
		for (int j = 0; j < cl; j++)
		{
			A[i][j] = res[i][j];
		}
	}
}
void calculate(vector<vector<long long int>> &A, int n)
{
	long long int sz = A.size();
	vector<vector<long long int>> I(sz, vector<long long int>(sz, 0));
	for (int i = 0; i < sz; i++)
	{
		for (int j = 0; j < sz; j++)
		{
			if (i == j)
				I[i][j] = 1;
			else
				I[i][j] = 0;
		}
	}
	while (n)
	{
		if (n % 2)
		{
			multiply(I, A);
			n--;
		}
		multiply(A, A);
		n /= 2;
	}
	for (int i = 0; i < sz; i++)
	{
		for (int j = 0; j < sz; j++)
		{
			A[i][j] = I[i][j];
		}
	}
}
int Solution::solve(int n) {
     
      if(n==1)return 1;
      vector<vector<long long int>> A(2, vector<long long int>(2, 0));
	A[0][0] = 1, A[1][0] = 1, A[0][1] = 1;
	calculate(A, n-1);
	return A[0][0];
    
}
