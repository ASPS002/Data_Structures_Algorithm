 will be addressing the following problem: Given a fixed array A of 2N integers, we need to calculate âˆ€ x function F(x) = Sum of all A[i] such that x&i = i, i.e., i is a subset of x.


Prerequisite
Basic Dynamic Programming
Bitmasks
In no way this should be considered an introduction to the above topics.

Solutions
Bruteforce
for(int mask = 0;mask < (1<<N); ++mask){
	for(int i = 0;i < (1<<N); ++i){
		if((mask&i) == i){
			F[mask] += A[i];
		}
	}
}
This solution is quite straightforward and inefficient with time complexity of O(4N)

Suboptimal Solution
// iterate over all the masks
for (int mask = 0; mask < (1<<n); mask++){
	F[mask] = A[0];
    // iterate over all the subsets of the mask
    for(int i = mask; i > 0; i = (i-1) & mask){
    	F[mask] += A[i];
    }
}