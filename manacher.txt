#include <bits/stdc++.h>
vector<int> manacher(string s) {
  int n = s.length();
  int l = 0, r = 0;
  vector<int> p(n);
  for (int i = 1; i < n; i++) {
    if (i < r) {
      p[i] = min(r - i, p[l + r - i - 1]);
    }
    while (i + p[i] < n && s[i + p[i]] == s[i - p[i]]) {
      p[i]++;
    }
    if (i + p[i] > r) {
      r = i + p[i];
      l = i - p[i] + 1;
    }
  }
  p[0] = 1;
  return p;
}
int minCharsforPalindrome(string str) {

  vector<int> v1 = manacher(str);
  int ans = str.length();
  int n = str.length();
  for (int i = 0; i < n; i++) {
    if (i - v1[i] + 1 == 0) {
      int rem = n - (i + v1[i]);
      ans = min(ans, rem);
    }
  }
  string t = "";
  for (int i = 0; i < n; i++) {
    t += "#";
    t += str[i];
  }
  v1 = manacher(t);
  int sz = t.length();
  int j = 0;
  for (int i = 0; i < sz; i += 2, j++) {
    int val = v1[i];
    val-=1;
    val = (val + 1) / 2;
    if (j - val == 0) {
      int rem = n - (j + val);
      ans = min(ans, rem);
    }
  }
  return ans;
}
